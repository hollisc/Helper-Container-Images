pipeline {
    agent {label "slave1 || slave2"}
    options {
    disableConcurrentBuilds()
    timestamps()
    }
    environment {
    GIT_ORG='hollisc'
    GIT_REPO='Helper-Container-Images'
    GIT_BRANCH='master'
    GIT_CREDS='github-hollisc'
    ICP_REGISTRY_URL='https://devops.gse.icp1.csplab.local:8500'
    ICP_REGISTRY_CREDS='icpRegistryCred'
    ICP_NAMESPACE='hollisc'
    IMAGE_NAME='kubectl'
    DOCKERFILE_PATH='./Dockerfiles/docker-kubectl'
    }

    stages {
     stage('SCM Checkout') {
      steps {
        script {
          git branch: "${GIT_BRANCH}",
          url: "https://github.com/${GIT_ORG}/${GIT_REPO}.git",
          credentialsId: "${GIT_CREDS}"
        }
      }
     }
     stage('Docker Build') {
      steps {
        script {
            docker.withRegistry("${ICP_REGISTRY_URL}", "${ICP_REGISTRY_CREDS}") {
                def myImage = docker.build("${ICP_NAMESPACE}/${IMAGE_NAME}:${env.BUILD_NUMBER}", "${DOCKERFILE_PATH}")
                myImage.push()
            }
        }
      }
     }
     stage('docker cleanup') {
      steps {
        sh """
            # Cleanup image
            docker images | grep ${ICP_NAMESPACE} | \
            grep ${IMAGE_NAME} | \
            awk '{print \$1 ":" \$2}' | \
            grep ':${env.BUILD_NUMBER}\$' | \
            xargs -n1 docker rmi
        """
      }
     }
    }
    post {
        always {
          script {
            cleanWs()
          }
        }
    }
}
